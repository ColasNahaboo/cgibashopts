#!/bin/bash
# run via tewiba
[ -n "$TEWIBA" ] || exec tewiba -v "$0"

# Testing the form file upload, POST with enctype=multipart/form-data
# the script form-files/cgibashopts-form-files.cgi has been installed on a
# server, and submitted via various browsers
# for a browser B. form-files/$B.data is the input stream fed to the script by
# the web server, and form-files/$B.vars is the dump of the environment vars
# the uploaded files sources are in files-unix for the browsers under unix
# and files-dos for the browsers under windows, as captured by 
# cgibashopts-form-files.cgi in /tmp/CBOgenf-$B.data and /tmp/CBOgenf-$B.vars
# In the form, only the files fields should be manually set, do not touch the
# others before submitting

# We "replay" all the saved CGI invocation data in form-files, so we do not 
# need a web server, different browsers, and manual steps for the tests

# Note: we exclude testing file5 in old bash versions < 4.4, as this is a
# teratological case, for testing purposes only, that will not happen in real
# operation and that bashes prior to 4.4 could not handle

dofile5=5
if [[ $BASH_VERSION =~ ^([[:digit:]]+)[.]([[:digit:]]+) ]]; then
    ((${BASH_REMATCH[1]} * 100 + ${BASH_REMATCH[2]} < 404)) && dofile5=
fi

for path in form-files/*.data; do
    B="${path%.data}"; B="${B##*/}"

    TEST Form file upload from browser $B
    for v in REQUEST_METHOD CONTENT_TYPE QUERY_STRING; do
	eval $(grep ^$v= form-files/"$B.vars") # setup the env
    done
    . ../cgibashopts <form-files/"$B.data" # fakes a cgi call, creates 5 files
	
    for i in 1 2 3 4 $dofile5; do
	# check if this file is expected to have DOS lines (CR-terminated)
        # dos2 is a variant for the weird file5 case with embedded CRs
	if egrep -qs "(^| )${i}.2( |\$)" form-files/"$B.dos"; then os=dos2
	elif egrep -qs "(^| )${i}( |\$)" form-files/"$B.dos"; then os=dos
	else os=unix
	fi
	if ! cmp -s $CGIBASHOPTS_DIR/file$i files-$os/file$i; then
	    cp $CGIBASHOPTS_DIR/file$i /tmp/$B-file-$i
	    TERR "file $file$i differ for browser $B.
# Expected:
$(hexdump -c $PWD/files-$os/file$i 2>/dev/null)
# Got:
$(hexdump -c /tmp/$B-file$i 2>/dev/null)"
	fi
	[ "$(param file$i)" = file$i ] || TERR filename of file$1 is: "\"$(param file$i)\""
    done

    # while we are at it, also test the form vars other than file vars
    [ "$FORM_text" != "A sample string!" ] && TERR "text is \"$FORM_text\""
    [ "$FORM_ta" != "ta1${nl}ta2${nl}ta3" ] && TERR "ta is \"$FORM_ta\""
    [ "$FORM_sel" != "sel3" ] && TERR "sel is \"$FORM_sel\""
    [ "$FORM_check" != "on" ] && TERR "check is \"$FORM_check\""

    . clearenv.sh
done

TEND
